// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  files     File[]
  folders   Folder[]
}

model Folder{
  id       Int       @id @default(autoincrement())
  name     String
  parentId Int?
  parent   Folder?   @relation("Subfolders", fields: [parentId], references: [id])
  children Folder[] @relation("Subfolders")
  userId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  files  File[]
}

model File {
  id        Int      @id @default(autoincrement())
  filename  String
  originalFileName String
  fileSize      Int
  uploadedAt DateTime @default(now())
  folderId  Int?
  folder  Folder?  @relation(fields: [folderId], references: [id], onDelete: Cascade)
  userId     Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt   DateTime
}
